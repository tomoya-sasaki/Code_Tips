// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "cmd+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'juliamarkdown'"
    },
    {
        "key": "ctrl+enter",
        "command": "-language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'julia'"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "cmd+2",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "home",
        "command": "-cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+0",
        "command": "cursorEnd",
        "when": "textInputFocus && !editorHasSelection"
    },
    {
        "key": "cmd+1",
        "command": "cursorHome",
        "when": "textInputFocus &&  !editorHasSelection"
    },
    {
        "key": "cmd+0",
        "command": "cursorEndSelect",
        "when": "textInputFocus && editorHasSelection"
    },
    {
        "key": "cmd+1",
        "command": "cursorHomeSelect",
        "when": "textInputFocus &&  editorHasSelection"
    },
    {
        "key": "end",
        "command": "-cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+up",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "cmd+down",
        "command": "workbench.action.navigateDown"
    },
    {
        "key": "cmd+right",
        "command": "-cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+left",
        "command": "-cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+up",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+=",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "cmd+-",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "cmd+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "shift+cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+=",
        "command": "imagePreview.zoomIn",
        "when": "!activeEditorIsNotPreview"
    },
    {
        "key": "cmd+-",
        "command": "imagePreview.zoomOut",
        "when": "!activeEditorIsNotPreview"
    },
    {
        "key": "shift+cmd+-",
        "command": "editor.action.fontZoomReset"
    },
    {
        "key": "shift+cmd+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+up",
        "command": "-notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "cmd+up",
        "command": "-workbench.action.terminal.navigationModeFocusPrevious",
        "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-workbench.action.terminal.navigationModeFocusNext",
        "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+down",
        "command": "-workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "alt+cmd+right",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },
    {
        "key": "alt+cmd+left",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    {
        "key": "alt+cmd+right",
        "command": "workbench.action.nextEditorInGroup",
        "when": "!panelFocus"
    },
    {
        "key": "cmd+k alt+cmd+right",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+cmd+left",
        "command": "workbench.action.previousEditorInGroup",
        "when": "!panelFocus"
    },
    {
        "key": "cmd+k alt+cmd+left",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "cmd+left",
        "command": "workbench.action.navigateLeft",
        "when": "!panelFocus"
    },
    {
        "key": "cmd+right",
        "command": "workbench.action.navigateRight",
        "when": "!panelFocus"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "cmd+right",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "n",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "config.jupyter.enableKeyboardShortcuts && notebookEditorFocused && !inputFocus && notebookViewType == 'jupyter-notebook'"
    },
    {
        "key": "b",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "config.jupyter.enableKeyboardShortcuts && notebookEditorFocused && !inputFocus && notebookViewType == 'jupyter-notebook'"
    },
    {
        "key": "ctrl+; b",
        "command": "-jupyter.insertCellBelow",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "x",
        "command": "jupyter.deleteCells",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; x",
        "command": "-jupyter.deleteCells",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "x",
        "command": "notebook.cell.delete",
        "when": "config.jupyter.enableKeyboardShortcuts && notebookEditorFocused && !inputFocus && notebookViewType == 'jupyter-notebook'"
    },
    {
        "key": "d d",
        "command": "-notebook.cell.delete",
        "when": "config.jupyter.enableKeyboardShortcuts && notebookEditorFocused && !inputFocus && notebookViewType == 'jupyter-notebook'"
    },
    {
        "key": "x",
        "command": "notebook.cell.delete",
        "when": "notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+backspace",
        "command": "-notebook.cell.delete",
        "when": "notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "python.execSelectionInTerminal",
            "cursorDown",
            "extension.vim_escape"
          ]
        },
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "cmd+enter",
        "command": "language-julia.executeJuliaCodeInREPL",
        "when": "editorTextFocus && editorLangId == 'julia'"
    },
    {
        "key": "cmd+enter",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "language-julia.executeJuliaCodeInREPL",
            "extension.vim_escape"
          ]
        },
        "when": "editorTextFocus && editorHasSelection && editorLangId == 'julia'"
    },
    {
        "key": "\\ a",
        "command": "r.knitRmd",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "\\ a",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "language-julia.executeFile",
            "extension.vim_escape"
          ]
        },
        "when": "editorTextFocus && editorLangId == 'julia'"
    },
    {
        "key": "\\ a",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "editor.action.selectAll",
            "python.execSelectionInTerminal",
            "workbench.action.navigateBack",
            "extension.vim_escape"
          ]
        },
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "\\ ,",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "\\ c",
        "command": "r.runCurrentChunk",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "\\ n",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "r.goToNextChunk",
            "center-editor-window.center"
          ]
        },
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "\\ shift+r",
        "command": "r.createRTerm",
        "when": "editorTextFocus && editorLangId =~ /(rmd|r)/"
    },
    {
        "key": "\\ shift+n",
        "command": "extension.multiCommand.execute",
        "args": {
          "sequence": [
            "r.goToPreviousChunk",
            "center-editor-window.center"
          ]
        },
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "ctrl+l",
        "command": "-center-editor-window.center",
        "when": "editorTextFocus || findWidgetVisible"
    },
    {
        "key": "shift+cmd+k",
        "command": "-r.knitRmd",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    }
]
