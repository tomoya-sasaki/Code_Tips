{
    "workbench.editor.showIcons": false,
    "window.autoDetectColorScheme": true,
    "files.trimTrailingWhitespace": true,
    "git.decorations.enabled": false,
    "workbench.preferredLightColorTheme": "Default Dark+",
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter.notebook.ipynb",
            "filenamePattern": "*.ipynb"
        }
    ],
    "julia.enableTelemetry": true,
    //
    // Terminal
    //
    "terminal.integrated.fontSize": 13.5,
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.commandsToSkipShell": [
        "language-julia.interrupt"
    ],
    //
    // UI badges
    //
    "scm.countBadge": "off",
    "git.countBadge": "off",
    //
    // Jupyter
    //
    "jupyter.askForKernelRestart": false,
    "jupyter.alwaysTrustNotebooks": true,
    //
    // Vim
    //
    "vim.vimrc.path": "/Users/shusei/.vimrc",
    "vim.hlsearch": true,
    "vim.whichwrap": "h,l,<,>,[,]",
    "vim.startofline": false,
    // "vim.normalModeKeyBindings": [
    //     {
    //         "before": ["<leader>", ","],
    //         "commands": [
    //             {
    //                 "command": "editor.action.commentLine"
    //             }
    //         ]
    //     }
    // ],
    // "vim.visualModeKeyBindings": [
    //     {
    //         "before": ["<leader>", ","],
    //         "commands": [
    //             {
    //                 "command": "editor.action.commentLine"
    //             }
    //         ]
    //     }
    // ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "g", "f"
            ],
            "after": [
                "g", "h"
            ]
        },
        {
            "before": [
                ";"
            ],
            "after": [
                ":"
            ]
        },
        {
            "before": [
                ":"
            ],
            "after": [
                ";"
            ]
        },
        {
            "before": [
                "*"
            ],
            "after": [
                "#", "N"
            ]
        },
        {
            "before": [
                "#"
            ],
            "after": [
                "*", "N"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                ";"
            ],
            "after": [
                ":"
            ]
        },
        {
            "before": [
                ":"
            ],
            "after": [
                ";"
            ]
        }
     ],
     "vim.insertModeKeyBindingsNonRecursive": [
         // Note that 'when' is not working now
        {
            "before": ["'"],
            "after": ["\""],
            "when": "editorTextFocus && editorLangId != 'tex'"
        },
        {
            "before": ["\""],
            "after": ["'"],
            "when": "editorTextFocus && editorLangId != 'tex'"
        },
        {
            "before": ["-"],
            "after": ["_"],
            "when": "editorTextFocus && editorLangId != 'tex'"
        },
        {
            "before": ["_"],
            "after": ["-"],
            "when": "editorTextFocus && editorLangId != 'tex'"
        }
    ],
    "vim.useCtrlKeys": true,
    "vim.easymotionDimBackground": false,
    "workbench.preferredHighContrastColorTheme": "Atom One Light",
    "typescript.preferences.quoteStyle": "double",
    //
    // Editor
    //
    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": false,
        "comments": false,
        "strings": false
    },
    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": false,
    "editor.minimap.enabled": false,
    "editor.insertSpaces": true,
    "editor.fontSize": 13.5,
    "editor.tabSize": 2,
    "editor.occurrencesHighlight": false,
    "breadcrumbs.enabled": false,
    "keyboard.touchbar.enabled": false,
    "jupyter.enableKeyboardShortcuts": false
}
